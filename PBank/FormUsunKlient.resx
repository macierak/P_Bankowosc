<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Usun.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAC0AAAAtCAYAAAA6GuKaAAABcGlDQ1BpY2MAACjPlZG9S8NAGMaftpaK
        VjroIOKQoYpDC8WC6FYq2KU6tBWsuiTXpBWSNFxSpLgKLg4FB9HFr8H/QFfBVUEQFEHExX/Ar0VKfK8p
        tIgO3nH3/niS5+XuOcCf1Zlh9yQAw3R4LpOWlorLUugFQZoRzCApM9uaz88V8Of4vINP1Nu46IX/jf6S
        ajPA10s8xSzuEKeIs+uOJXibeIhV5BLxIXGM0wGJr4SuePwsuOzxu2BeyM3S3URPqdzFShezCjeIJ4ij
        hl5j7fOIm4RVczFPdYTWKGzkkEEaEhTUsAYdDuJUTcrsd1+i5VtAlTyMdgt1cHKUUSFvjNQadVWpaqSr
        NHXURe4/87S15KTXPZwGgk+u+zYGhHaAZsN1v45ct3kMBB6BC7Pjr1JO0x+kNzpa9ACIbAJnlx1N2QXO
        t4DhB0vmcksK0PJrGvB6CgwUgcEboG/Fy6r9HSf3QGGDnuga2NsHxun/yOo3RrloK4iZhRYAAAAJcEhZ
        cwAALiMAAC4jAXilP3YAAAIZSURBVGhD7ZjPboJAEMZFxbSx6bFNem7CoUkvfd++ic/iyYOn6kFjFLTz
        DZ8UCVj2D2ua8ksmu8wy3wzLsqCDnp6enttwOp0K2+120Xq9jsUmaZqqrwp8MhZtNps7aYfSTqUdi8Vi
        k9Vq9b7f76d1sV6RBFfhaYoUOZai0MZykSMMS/+eF/AoYzF8lbCCWZIM2W3PWRC2XC4fpG2FzP4Y8VIc
        ijwXOxLDLEfnC/gNKTpi15zFYvGs1RiAi2R4AZYUisfsyyn0dkRehhWY4Ygzbj9rpjC5NZQJC3NbA42g
        szyfz9+Y2xrZ1vShDAbzunKkXBiY1BnKhSHLsi/mtWa73X5SLgyy1+IV6wSlwsLc1lAmLMxtBXcfaKgF
        BQXYwPDbwTpaw7DwIDfeZmhprWB4ERuUvIQcuhQ5PObeH7A9clihW9c1Xd0gOQrD6xdJy7R5sOpe/fJ9
        bf4xbwPzeYOy3cE8Xul0mdTdXlcoPcAygcFVcrujWTxByUZNDrvhc5ahV/cwV9HELlDHCyZ6mtwWajjT
        8HUoW3mWsX+xz1v9upE470uDXXDx+1Au6EV8GMfbEv9/KBw2g7FeqOipPkjT9APHJUPhCk8xg7FeqOjh
        DurtxyxzDMViCT2JKfAbw1hvNGhiLcMOekS0ABsY7w0TTS3ABsZ7pY2uJneBOt7A1tek2+m3yDWc/ort
        6fmH/IlnRoos22iWJK/fq8Ge1zZxIyIAAAAASUVORK5CYII=
</value>
  </data>
</root>